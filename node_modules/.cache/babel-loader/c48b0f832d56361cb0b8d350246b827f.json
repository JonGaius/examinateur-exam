{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport examenService from './examenService';\nconst initialState = {\n  examens: null,\n  examen: null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\nexport const getTodayExams = createAsyncThunk('examen/today', async (data, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user;\n    return await examenService.getTodayExams(data, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const getExam = createAsyncThunk('examen/show', async (data, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user;\n    return await examenService.getExam(data, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const getMyPrograms = createAsyncThunk('examen/my-program', async (data, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user;\n    return await examenService.getMyPrograms(data, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const examenSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getMyPrograms.pending, state => {\n      state.isLoading = true;\n    }).addCase(getMyPrograms.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.examens = action.payload;\n    }).addCase(getMyPrograms.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.examens = null;\n    }).addCase(getExam.pending, state => {\n      state.isLoading = true;\n    }).addCase(getExam.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.examen = action.payload;\n    }).addCase(getExam.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.examen = null;\n    }).addCase(getTodayExams.pending, state => {\n      state.isLoading = true;\n    }).addCase(getTodayExams.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.examens = action.payload;\n    }).addCase(getTodayExams.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.examens = null;\n    });\n  }\n});\nexport const {\n  reset\n} = examenSlice.actions;\nexport default examenSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","examenService","initialState","examens","examen","isError","isSuccess","isLoading","message","getTodayExams","data","thunkAPI","token","getState","auth","user","error","response","toString","rejectWithValue","getExam","getMyPrograms","examenSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/Users/jonathangaiuskambire/Documents/sigepec/correction/examinateur/src/features/examens/examenSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport examenService from './examenService'\n\n\nconst initialState = {\n    examens: null,\n    examen: null,\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: '',\n}\n\nexport const getTodayExams = createAsyncThunk(\n    'examen/today',\n    async (data, thunkAPI) => {\n      try {\n        const token = thunkAPI.getState().auth.user\n        return await examenService.getTodayExams(data, token)\n      } catch (error) {\n        const message =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString()\n        return thunkAPI.rejectWithValue(message)\n      }\n    }\n)\n\nexport const getExam = createAsyncThunk(\n    'examen/show',\n    async (data, thunkAPI) => {\n      try {\n        const token = thunkAPI.getState().auth.user\n        return await examenService.getExam(data, token)\n      } catch (error) {\n        const message =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString()\n        return thunkAPI.rejectWithValue(message)\n      }\n    }\n)\n\nexport const getMyPrograms = createAsyncThunk(\n    'examen/my-program',\n    async (data, thunkAPI) => {\n      try {\n        const token = thunkAPI.getState().auth.user\n        return await examenService.getMyPrograms(data, token)\n      } catch (error) {\n        const message =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString()\n        return thunkAPI.rejectWithValue(message)\n      }\n    }\n)\n\nexport const examenSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n      reset: (state) => {\n        state.isLoading = false\n        state.isSuccess = false\n        state.isError = false\n        state.message = ''\n      },\n    },\n    extraReducers: (builder) => {\n      builder\n        \n        .addCase(getMyPrograms.pending, (state) => {\n            state.isLoading = true\n        })\n        .addCase(getMyPrograms.fulfilled, (state, action) => {\n            state.isLoading = false\n            state.isSuccess = true\n            state.examens = action.payload\n        })\n        .addCase(getMyPrograms.rejected, (state, action) => {\n            state.isLoading = false\n            state.isError = true\n            state.message = action.payload\n            state.examens = null\n        })\n\n        .addCase(getExam.pending, (state) => {\n            state.isLoading = true\n        })\n        .addCase(getExam.fulfilled, (state, action) => {\n            state.isLoading = false\n            state.isSuccess = true\n            state.examen = action.payload\n        })\n        .addCase(getExam.rejected, (state, action) => {\n            state.isLoading = false\n            state.isError = true\n            state.message = action.payload\n            state.examen = null\n        })\n\n        .addCase(getTodayExams.pending, (state) => {\n            state.isLoading = true\n        })\n        .addCase(getTodayExams.fulfilled, (state, action) => {\n            state.isLoading = false\n            state.isSuccess = true\n            state.examens = action.payload\n        })\n        .addCase(getTodayExams.rejected, (state, action) => {\n            state.isLoading = false\n            state.isError = true\n            state.message = action.payload\n            state.examens = null\n        })\n    },\n})\n  \nexport const { reset } = examenSlice.actions\nexport default examenSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}