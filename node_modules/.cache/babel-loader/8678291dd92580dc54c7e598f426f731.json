{"ast":null,"code":"var _jsxFileName = \"/Users/jonathangaiuskambire/Documents/sigepec/correction/examinateur/src/views/components/card/Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport audio from \"../../../assets/audio/sonnerie-reveil.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst music = new Audio(audio);\nconst Timer = _ref => {\n  _s();\n  let {\n    fnc,\n    socket,\n    examen\n  } = _ref;\n  const green = \"#EF233C\";\n  const [secondLeft, setSecondLeft] = useState(0);\n  const secondLeftRef = useRef(secondLeft);\n  const settingsInfo = {\n    workMinutes: 2\n  };\n  useEffect(() => {\n    secondLeftRef.current = 2 * 60;\n    setSecondLeft(secondLeftRef.current);\n    const timer = setInterval(() => {\n      if (secondLeftRef.current === 0) {\n        //    navigate(\"/examens/fin\")\n        music.play();\n        music.loop = true;\n        fnc(true);\n        // console.log(\"finished\")\n\n        let data = {\n          room: examen,\n          statut: true\n        };\n        socket.emit(\"finish_composition\", data);\n      }\n      if (secondLeftRef.current > 0) {\n        secondLeftRef.current = secondLeftRef.current - 1;\n        setSecondLeft(secondLeftRef.current);\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [fnc, socket, examen]);\n  return /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n    value: secondLeft / (60 * settingsInfo.workMinutes) * 100,\n    text: `${Math.floor(secondLeft / 60)} : ${secondLeft % 60 < 10 ? \"0\" + secondLeft % 60 : secondLeft % 60}`,\n    styles: buildStyles({\n      pathColor: green,\n      textColor: green,\n      textSize: 19\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Timer, \"9j5Tvwf8OdUNjpmGam0tLQKUDQg=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","CircularProgressbar","buildStyles","audio","music","Audio","Timer","fnc","socket","examen","green","secondLeft","setSecondLeft","secondLeftRef","settingsInfo","workMinutes","current","timer","setInterval","play","loop","data","room","statut","emit","clearInterval","Math","floor","pathColor","textColor","textSize"],"sources":["/Users/jonathangaiuskambire/Documents/sigepec/correction/examinateur/src/views/components/card/Timer.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport {CircularProgressbar, buildStyles} from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\"\nimport audio from \"../../../assets/audio/sonnerie-reveil.mp3\"\n\nconst music = new Audio(audio);\n\nconst Timer = ({fnc, socket, examen}) => {\n    const green = \"#EF233C\"\n    const [secondLeft, setSecondLeft] = useState(0)\n    const secondLeftRef = useRef(secondLeft)\n    const settingsInfo = {\n        workMinutes: 2\n    }\n    \n    \n    useEffect(() => {\n        secondLeftRef.current = 2 * 60\n        setSecondLeft(secondLeftRef.current)\n        const timer = setInterval(() => {\n            if(secondLeftRef.current === 0){\n            //    navigate(\"/examens/fin\")\n                music.play();\n                music.loop =true;\n                fnc(true)\n                // console.log(\"finished\")\n\n                let data = {\n                    room: examen,\n                    statut: true,\n                }\n                socket.emit(\"finish_composition\", data)\n            }\n            if(secondLeftRef.current > 0){\n                secondLeftRef.current = secondLeftRef.current - 1;\n                setSecondLeft(secondLeftRef.current)\n            }\n        }, 1000)\n        return () => clearInterval(timer)\n\n    },[fnc,socket,examen])\n    return (\n        <CircularProgressbar value={secondLeft / (60 * settingsInfo.workMinutes) * 100} text={`${Math.floor(secondLeft / 60)} : ${(secondLeft % 60) < 10 ? \"0\"+secondLeft % 60 : secondLeft % 60}`} styles={buildStyles({\n            pathColor: green,\n            textColor: green,\n            textSize: 19\n        })} />\n    );\n};\n\nexport default Timer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAAQC,mBAAmB,EAAEC,WAAW,QAAO,4BAA4B;AAC3E,OAAO,4CAA4C;AACnD,OAAOC,KAAK,MAAM,2CAA2C;AAAA;AAE7D,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACF,KAAK,CAAC;AAE9B,MAAMG,KAAK,GAAG,QAA2B;EAAA;EAAA,IAA1B;IAACC,GAAG;IAAEC,MAAM;IAAEC;EAAM,CAAC;EAChC,MAAMC,KAAK,GAAG,SAAS;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAMa,aAAa,GAAGd,MAAM,CAACY,UAAU,CAAC;EACxC,MAAMG,YAAY,GAAG;IACjBC,WAAW,EAAE;EACjB,CAAC;EAGDjB,SAAS,CAAC,MAAM;IACZe,aAAa,CAACG,OAAO,GAAG,CAAC,GAAG,EAAE;IAC9BJ,aAAa,CAACC,aAAa,CAACG,OAAO,CAAC;IACpC,MAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC5B,IAAGL,aAAa,CAACG,OAAO,KAAK,CAAC,EAAC;QAC/B;QACIZ,KAAK,CAACe,IAAI,EAAE;QACZf,KAAK,CAACgB,IAAI,GAAE,IAAI;QAChBb,GAAG,CAAC,IAAI,CAAC;QACT;;QAEA,IAAIc,IAAI,GAAG;UACPC,IAAI,EAAEb,MAAM;UACZc,MAAM,EAAE;QACZ,CAAC;QACDf,MAAM,CAACgB,IAAI,CAAC,oBAAoB,EAAEH,IAAI,CAAC;MAC3C;MACA,IAAGR,aAAa,CAACG,OAAO,GAAG,CAAC,EAAC;QACzBH,aAAa,CAACG,OAAO,GAAGH,aAAa,CAACG,OAAO,GAAG,CAAC;QACjDJ,aAAa,CAACC,aAAa,CAACG,OAAO,CAAC;MACxC;IACJ,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMS,aAAa,CAACR,KAAK,CAAC;EAErC,CAAC,EAAC,CAACV,GAAG,EAACC,MAAM,EAACC,MAAM,CAAC,CAAC;EACtB,oBACI,QAAC,mBAAmB;IAAC,KAAK,EAAEE,UAAU,IAAI,EAAE,GAAGG,YAAY,CAACC,WAAW,CAAC,GAAG,GAAI;IAAC,IAAI,EAAG,GAAEW,IAAI,CAACC,KAAK,CAAChB,UAAU,GAAG,EAAE,CAAE,MAAMA,UAAU,GAAG,EAAE,GAAI,EAAE,GAAG,GAAG,GAACA,UAAU,GAAG,EAAE,GAAGA,UAAU,GAAG,EAAG,EAAE;IAAC,MAAM,EAAET,WAAW,CAAC;MAC5M0B,SAAS,EAAElB,KAAK;MAChBmB,SAAS,EAAEnB,KAAK;MAChBoB,QAAQ,EAAE;IACd,CAAC;EAAE;IAAA;IAAA;IAAA;EAAA,QAAG;AAEd,CAAC;AAAC,GAzCIxB,KAAK;AAAA,KAALA,KAAK;AA2CX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}