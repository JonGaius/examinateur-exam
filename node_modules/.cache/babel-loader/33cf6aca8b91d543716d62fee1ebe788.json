{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.signalsByNumber = exports.signalsByName = void 0;\nvar _os = require(\"os\");\nvar _signals = require(\"./signals.js\");\nvar _realtime = require(\"./realtime.js\");\nconst getSignalsByName = function () {\n  const signals = (0, _signals.getSignals)();\n  return signals.reduce(getSignalByName, {});\n};\nconst getSignalByName = function (signalByNameMemo, _ref) {\n  let {\n    name,\n    number,\n    description,\n    supported,\n    action,\n    forced,\n    standard\n  } = _ref;\n  return {\n    ...signalByNameMemo,\n    [name]: {\n      name,\n      number,\n      description,\n      supported,\n      action,\n      forced,\n      standard\n    }\n  };\n};\nconst signalsByName = getSignalsByName();\nexports.signalsByName = signalsByName;\nconst getSignalsByNumber = function () {\n  const signals = (0, _signals.getSignals)();\n  const length = _realtime.SIGRTMAX + 1;\n  const signalsA = Array.from({\n    length\n  }, (value, number) => getSignalByNumber(number, signals));\n  return Object.assign({}, ...signalsA);\n};\nconst getSignalByNumber = function (number, signals) {\n  const signal = findSignalByNumber(number, signals);\n  if (signal === undefined) {\n    return {};\n  }\n  const {\n    name,\n    description,\n    supported,\n    action,\n    forced,\n    standard\n  } = signal;\n  return {\n    [number]: {\n      name,\n      number,\n      description,\n      supported,\n      action,\n      forced,\n      standard\n    }\n  };\n};\nconst findSignalByNumber = function (number, signals) {\n  const signal = signals.find(_ref2 => {\n    let {\n      name\n    } = _ref2;\n    return _os.constants.signals[name] === number;\n  });\n  if (signal !== undefined) {\n    return signal;\n  }\n  return signals.find(signalA => signalA.number === number);\n};\nconst signalsByNumber = getSignalsByNumber();\nexports.signalsByNumber = signalsByNumber;","map":{"version":3,"mappings":";;;;;;AAAA;AAEA;AACA;AAIA,MAAMA,gBAAgB,GAAG,YAAW;EAClC,MAAMC,OAAO,GAAG,0BAAhB;EACA,OAAOA,OAAO,CAACC,MAAR,CAAeC,eAAf,EAAgC,EAAhC,CAAP;AACD,CAHD;AAKA,MAAMA,eAAe,GAAG,UACtBC,gBADsB,QAGtB;EAAA,IADA;IAAEC,IAAF;IAAQC,MAAR;IAAgBC,WAAhB;IAA6BC,SAA7B;IAAwCC,MAAxC;IAAgDC,MAAhD;IAAwDC;EAAxD,CAFsB;EAItB,OAAO;IACL,GAAGP,gBADE;IAEL,CAACC,IAAD,GAAQ;MAAEA,IAAF;MAAQC,MAAR;MAAgBC,WAAhB;MAA6BC,SAA7B;MAAwCC,MAAxC;MAAgDC,MAAhD;MAAwDC;IAAxD;EAFH,CAAP;AAID,CARD;AAUO,MAAMC,aAAa,GAAGZ,gBAAgB,EAAtC;;AAKP,MAAMa,kBAAkB,GAAG,YAAW;EACpC,MAAMZ,OAAO,GAAG,0BAAhB;EACA,MAAMa,MAAM,GAAGC,qBAAW,CAA1B;EACA,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAW;IAAEJ;EAAF,CAAX,EAAuB,CAACK,KAAD,EAAQb,MAAR,KACtCc,iBAAiB,CAACd,MAAD,EAASL,OAAT,CADF,CAAjB;EAGA,OAAOoB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,GAAGN,QAArB,CAAP;AACD,CAPD;AASA,MAAMI,iBAAiB,GAAG,UAASd,MAAT,EAAiBL,OAAjB,EAA0B;EAClD,MAAMsB,MAAM,GAAGC,kBAAkB,CAAClB,MAAD,EAASL,OAAT,CAAjC;EAEA,IAAIsB,MAAM,KAAKE,SAAf,EAA0B;IACxB,OAAO,EAAP;EACD;EAED,MAAM;IAAEpB,IAAF;IAAQE,WAAR;IAAqBC,SAArB;IAAgCC,MAAhC;IAAwCC,MAAxC;IAAgDC;EAAhD,IAA6DY,MAAnE;EACA,OAAO;IACL,CAACjB,MAAD,GAAU;MACRD,IADQ;MAERC,MAFQ;MAGRC,WAHQ;MAIRC,SAJQ;MAKRC,MALQ;MAMRC,MANQ;MAORC;IAPQ;EADL,CAAP;AAWD,CAnBD;AAuBA,MAAMa,kBAAkB,GAAG,UAASlB,MAAT,EAAiBL,OAAjB,EAA0B;EACnD,MAAMsB,MAAM,GAAGtB,OAAO,CAACyB,IAAR,CAAa;IAAA,IAAC;MAAErB;IAAF,CAAD;IAAA,OAAcsB,cAAU1B,OAAV,CAAkBI,IAAlB,MAA4BC,MAAvD;EAAA,EAAf;EAEA,IAAIiB,MAAM,KAAKE,SAAf,EAA0B;IACxB,OAAOF,MAAP;EACD;EAED,OAAOtB,OAAO,CAACyB,IAAR,CAAaE,OAAO,IAAIA,OAAO,CAACtB,MAAR,KAAmBA,MAA3C,CAAP;AACD,CARD;AAUO,MAAMuB,eAAe,GAAGhB,kBAAkB,EAA1C","names":["getSignalsByName","signals","reduce","getSignalByName","signalByNameMemo","name","number","description","supported","action","forced","standard","signalsByName","getSignalsByNumber","length","SIGRTMAX","signalsA","Array","from","value","getSignalByNumber","Object","assign","signal","findSignalByNumber","undefined","find","constants","signalA","signalsByNumber"],"sources":["/Users/jonathangaiuskambire/Documents/sigepec/correction/examinateur/node_modules/human-signals/src/main.js"],"sourcesContent":["import { constants } from 'os'\n\nimport { getSignals } from './signals.js'\nimport { SIGRTMAX } from './realtime.js'\n\n// Retrieve `signalsByName`, an object mapping signal name to signal properties.\n// We make sure the object is sorted by `number`.\nconst getSignalsByName = function() {\n  const signals = getSignals()\n  return signals.reduce(getSignalByName, {})\n}\n\nconst getSignalByName = function(\n  signalByNameMemo,\n  { name, number, description, supported, action, forced, standard },\n) {\n  return {\n    ...signalByNameMemo,\n    [name]: { name, number, description, supported, action, forced, standard },\n  }\n}\n\nexport const signalsByName = getSignalsByName()\n\n// Retrieve `signalsByNumber`, an object mapping signal number to signal\n// properties.\n// We make sure the object is sorted by `number`.\nconst getSignalsByNumber = function() {\n  const signals = getSignals()\n  const length = SIGRTMAX + 1\n  const signalsA = Array.from({ length }, (value, number) =>\n    getSignalByNumber(number, signals),\n  )\n  return Object.assign({}, ...signalsA)\n}\n\nconst getSignalByNumber = function(number, signals) {\n  const signal = findSignalByNumber(number, signals)\n\n  if (signal === undefined) {\n    return {}\n  }\n\n  const { name, description, supported, action, forced, standard } = signal\n  return {\n    [number]: {\n      name,\n      number,\n      description,\n      supported,\n      action,\n      forced,\n      standard,\n    },\n  }\n}\n\n// Several signals might end up sharing the same number because of OS-specific\n// numbers, in which case those prevail.\nconst findSignalByNumber = function(number, signals) {\n  const signal = signals.find(({ name }) => constants.signals[name] === number)\n\n  if (signal !== undefined) {\n    return signal\n  }\n\n  return signals.find(signalA => signalA.number === number)\n}\n\nexport const signalsByNumber = getSignalsByNumber()\n"]},"metadata":{},"sourceType":"script"}