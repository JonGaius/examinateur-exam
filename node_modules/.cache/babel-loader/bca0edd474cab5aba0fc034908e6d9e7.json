{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { isLoggin } from '../../utils/sharedFunction';\nimport authService from './authService';\n\n// Get user from localStorage\nconst user = isLoggin(\"auth-dgttm\");\nconst userInfo = JSON.parse(localStorage.getItem('auth-dgttm-user'));\nconst initialState = {\n  user: user ? user : null,\n  me: null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  isEditError: false,\n  isEditSuccess: false,\n  isEditLoading: false,\n  message: ''\n};\nexport const login = createAsyncThunk('auth/login', async (data, thunkAPI) => {\n  try {\n    return await authService.login(data);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const getMe = createAsyncThunk('auth/me', async function () {\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userInfo.user_slug;\n  let thunkAPI = arguments.length > 1 ? arguments[1] : undefined;\n  try {\n    const token = thunkAPI.getState().auth.user;\n    return await authService.me(data, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const updateInfos = createAsyncThunk('auth/update-info', async (data, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user;\n    return await authService.updateInfos(data, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const updatePassword = createAsyncThunk('auth/update-password', async (data, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user;\n    return await authService.updatePassword(data, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authService.logout();\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n      state.isEditError = false;\n      state.isEditLoading = false;\n      state.isEditSuccess = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(getMe.pending, state => {\n      state.isLoading = true;\n    }).addCase(getMe.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.me = action.payload;\n    }).addCase(getMe.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.me = null;\n    }).addCase(updateInfos.pending, state => {\n      state.isEditLoading = true;\n    }).addCase(updateInfos.fulfilled, (state, action) => {\n      state.isEditLoading = false;\n      state.isEditSuccess = true;\n      // state.me = action.payload\n    }).addCase(updateInfos.rejected, (state, action) => {\n      state.isEditLoading = false;\n      state.isEditError = true;\n      state.message = action.payload;\n      // state.me = null\n    }).addCase(updatePassword.pending, state => {\n      state.isEditLoading = true;\n    }).addCase(updatePassword.fulfilled, (state, action) => {\n      state.isEditLoading = false;\n      state.isEditSuccess = true;\n      // state.me = action.payload\n    }).addCase(updatePassword.rejected, (state, action) => {\n      state.isEditLoading = false;\n      state.isEditError = true;\n      state.message = action.payload;\n      // state.me = null\n    }).addCase(logout.fulfilled, state => {\n      state.user = null;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","isLoggin","authService","user","userInfo","JSON","parse","localStorage","getItem","initialState","me","isError","isSuccess","isLoading","isEditError","isEditSuccess","isEditLoading","message","login","data","thunkAPI","error","response","toString","rejectWithValue","getMe","user_slug","token","getState","auth","updateInfos","updatePassword","logout","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/Users/jonathangaiuskambire/Documents/sigepec/correction/examinateur/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { isLoggin } from '../../utils/sharedFunction'\nimport authService from './authService'\n\n// Get user from localStorage\nconst user = isLoggin(\"auth-dgttm\")\nconst userInfo = JSON.parse(localStorage.getItem('auth-dgttm-user'))\n\nconst initialState = {\n    user: user ? user : null,\n    me: null,\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    isEditError: false,\n    isEditSuccess: false,\n    isEditLoading: false,\n    message: '',\n}\n\nexport const login = createAsyncThunk(\n    'auth/login', \n    async (data, thunkAPI) => {\n    try {\n      return await authService.login(data)\n    } catch (error) {\n      const message =\n        (error.response && error.response.data && error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n})\n\nexport const getMe = createAsyncThunk(\n    'auth/me',\n    async (data = userInfo.user_slug, thunkAPI) => {\n      try {\n        const token = thunkAPI.getState().auth.user\n        return await authService.me(data, token)\n      } catch (error) {\n        const message =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString()\n        return thunkAPI.rejectWithValue(message)\n      }\n    }\n)\n\nexport const updateInfos = createAsyncThunk(\n    'auth/update-info',\n    async (data, thunkAPI) => {\n      try {\n        const token = thunkAPI.getState().auth.user\n        return await authService.updateInfos(data, token)\n      } catch (error) {\n        const message =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString()\n        return thunkAPI.rejectWithValue(message)\n      }\n    }\n)\n\nexport const updatePassword = createAsyncThunk(\n    'auth/update-password',\n    async (data, thunkAPI) => {\n      try {\n        const token = thunkAPI.getState().auth.user\n        return await authService.updatePassword(data, token)\n      } catch (error) {\n        const message =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString()\n        return thunkAPI.rejectWithValue(message)\n      }\n    }\n)\n\nexport const logout = createAsyncThunk(\n    'auth/logout', \n    async () => {\n    await authService.logout()\n})\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n      reset: (state) => {\n        state.isLoading = false\n        state.isSuccess = false\n        state.isError = false\n        state.isEditError = false\n        state.isEditLoading = false\n        state.isEditSuccess = false\n        state.message = ''\n      },\n    },\n    extraReducers: (builder) => {\n      builder\n        .addCase(login.pending, (state) => {\n          state.isLoading = true\n        })\n        .addCase(login.fulfilled, (state, action) => {\n          state.isLoading = false\n          state.isSuccess = true\n          state.user = action.payload\n        })\n        .addCase(login.rejected, (state, action) => {\n          state.isLoading = false\n          state.isError = true\n          state.message = action.payload\n          state.user = null\n        })\n        .addCase(getMe.pending, (state) => {\n            state.isLoading = true\n        })\n        .addCase(getMe.fulfilled, (state, action) => {\n            state.isLoading = false\n            state.isSuccess = true\n            state.me = action.payload\n        })\n        .addCase(getMe.rejected, (state, action) => {\n          state.isLoading = false\n          state.isError = true\n          state.message = action.payload\n          state.me = null\n        })\n        .addCase(updateInfos.pending, (state) => {\n            state.isEditLoading = true\n        })\n        .addCase(updateInfos.fulfilled, (state, action) => {\n            state.isEditLoading = false\n            state.isEditSuccess = true\n            // state.me = action.payload\n        })\n        .addCase(updateInfos.rejected, (state, action) => {\n          state.isEditLoading = false\n          state.isEditError = true\n          state.message = action.payload\n          // state.me = null\n        })\n        .addCase(updatePassword.pending, (state) => {\n            state.isEditLoading = true\n        })\n        .addCase(updatePassword.fulfilled, (state, action) => {\n            state.isEditLoading = false\n            state.isEditSuccess = true\n            // state.me = action.payload\n        })\n        .addCase(updatePassword.rejected, (state, action) => {\n          state.isEditLoading = false\n          state.isEditError = true\n          state.message = action.payload\n          // state.me = null\n        })\n        .addCase(logout.fulfilled, (state) => {\n          state.user = null\n        })\n    },\n})\n  \nexport const { reset } = authSlice.actions\nexport default authSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}