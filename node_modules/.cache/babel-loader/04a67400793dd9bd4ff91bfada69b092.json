{"ast":null,"code":"import axios from \"axios\";\nimport { APIURL } from \"../../utils/constant\";\nconst getTodayExams = async (data, token) => {\n  // const config = {\n  //     headers: {\n  //       Authorization: `Bearer ${token}`,\n  //     },\n  // }\n\n  const response = await axios.post(APIURL + `gestion_examen/examens/get_examen_examinateur_du_jour/`, data);\n  // console.log(response.data)\n  return response.data;\n};\nconst getSujets = async (data, token) => {\n  // const config = {\n  //     headers: {\n  //       Authorization: `Bearer ${token}`,\n  //     },\n  // }\n\n  const response = await axios.post(APIURL + `gestion_examen/sujets/get_sujet_examen/`, data);\n  if (response.data && response.data.sujet) {\n    let obj = {\n      question: response.data.sujet.questions_choisies\n    };\n    const responses = await axios.post(APIURL + `questionnaires/questions/get_question/`, obj);\n    let obe = {\n      sujet: response.data.sujet,\n      questions: responses.data.message\n    };\n    return obe;\n  }\n};\nconst getMyPrograms = async (data, token) => {\n  // const config = {\n  //     headers: {\n  //       Authorization: `Bearer ${token}`,\n  //     },\n  // }\n\n  const response = await axios.post(APIURL + `gestion_examen/examens/get_examen_examinateur/`, data);\n  console.log(response);\n  return response.data;\n};\nconst getExam = async (data, token) => {\n  // const config = {\n  //     headers: {\n  //       Authorization: `Bearer ${token}`,\n  //     },\n  // }\n\n  const response = await axios.get(APIURL + `gestion_examen/examens/${data}/`);\n  return response.data;\n};\nconst getExams = async token => {\n  // const config = {\n  //     headers: {\n  //       Authorization: `Bearer ${token}`,\n  //     },\n  // }\n\n  const response = await axios.get(APIURL + `gestion_examen/examens/`);\n  return response.data;\n};\nconst updateExam = async (data, token) => {\n  // const config = {\n  //     headers: {\n  //       Authorization: `Bearer ${token}`,\n  //     },\n  // }\n\n  const response = await axios.patch(APIURL + `gestion_examen/examens/${data.id}/`, data.content);\n  return response.data;\n};\nconst examenService = {\n  getMyPrograms,\n  getExam,\n  getTodayExams,\n  getSujets,\n  updateExam,\n  getExams\n};\nexport default examenService;","map":{"version":3,"names":["axios","APIURL","getTodayExams","data","token","response","post","getSujets","sujet","obj","question","questions_choisies","responses","obe","questions","message","getMyPrograms","console","log","getExam","get","getExams","updateExam","patch","id","content","examenService"],"sources":["/Users/jonathangaiuskambire/Documents/sigepec/correction/examinateur/src/features/examens/examenService.js"],"sourcesContent":["import axios from \"axios\";\nimport { APIURL } from \"../../utils/constant\";\n\nconst getTodayExams = async (data, token) => {\n    // const config = {\n    //     headers: {\n    //       Authorization: `Bearer ${token}`,\n    //     },\n    // }\n    \n    const response = await axios.post(APIURL + `gestion_examen/examens/get_examen_examinateur_du_jour/`, data)\n    // console.log(response.data)\n    return response.data\n}\n\nconst getSujets = async (data, token) => {\n    // const config = {\n    //     headers: {\n    //       Authorization: `Bearer ${token}`,\n    //     },\n    // }\n    \n    const response = await axios.post(APIURL + `gestion_examen/sujets/get_sujet_examen/`, data)\n    if(response.data && response.data.sujet){\n        let obj = {\n            question: response.data.sujet.questions_choisies\n        }\n        const responses = await axios.post(APIURL + `questionnaires/questions/get_question/`, obj)\n        let obe = {\n            sujet: response.data.sujet,\n            questions: responses.data.message\n        }\n        return obe\n    }\n}\n\nconst getMyPrograms = async (data, token) => {\n    // const config = {\n    //     headers: {\n    //       Authorization: `Bearer ${token}`,\n    //     },\n    // }\n    \n    const response = await axios.post(APIURL + `gestion_examen/examens/get_examen_examinateur/`, data)\n    console.log(response)\n    return response.data\n}\n\nconst getExam = async (data, token) => {\n    // const config = {\n    //     headers: {\n    //       Authorization: `Bearer ${token}`,\n    //     },\n    // }\n    \n    const response = await axios.get(APIURL + `gestion_examen/examens/${data}/`)\n    \n    return response.data\n}\n\nconst getExams = async (token) => {\n    // const config = {\n    //     headers: {\n    //       Authorization: `Bearer ${token}`,\n    //     },\n    // }\n    \n    const response = await axios.get(APIURL + `gestion_examen/examens/`)\n    \n    return response.data\n}\n\nconst updateExam = async (data, token) => {\n    // const config = {\n    //     headers: {\n    //       Authorization: `Bearer ${token}`,\n    //     },\n    // }\n    \n    const response = await axios.patch(APIURL + `gestion_examen/examens/${data.id}/`, data.content)\n    \n    return response.data\n}\nconst examenService = {\n    getMyPrograms,\n    getExam,\n    getTodayExams,\n    getSujets,\n    updateExam,\n    getExams\n}\n\nexport default examenService"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,sBAAsB;AAE7C,MAAMC,aAAa,GAAG,OAAOC,IAAI,EAAEC,KAAK,KAAK;EACzC;EACA;EACA;EACA;EACA;;EAEA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAACL,MAAM,GAAI,wDAAuD,EAAEE,IAAI,CAAC;EAC1G;EACA,OAAOE,QAAQ,CAACF,IAAI;AACxB,CAAC;AAED,MAAMI,SAAS,GAAG,OAAOJ,IAAI,EAAEC,KAAK,KAAK;EACrC;EACA;EACA;EACA;EACA;;EAEA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAACL,MAAM,GAAI,yCAAwC,EAAEE,IAAI,CAAC;EAC3F,IAAGE,QAAQ,CAACF,IAAI,IAAIE,QAAQ,CAACF,IAAI,CAACK,KAAK,EAAC;IACpC,IAAIC,GAAG,GAAG;MACNC,QAAQ,EAAEL,QAAQ,CAACF,IAAI,CAACK,KAAK,CAACG;IAClC,CAAC;IACD,MAAMC,SAAS,GAAG,MAAMZ,KAAK,CAACM,IAAI,CAACL,MAAM,GAAI,wCAAuC,EAAEQ,GAAG,CAAC;IAC1F,IAAII,GAAG,GAAG;MACNL,KAAK,EAAEH,QAAQ,CAACF,IAAI,CAACK,KAAK;MAC1BM,SAAS,EAAEF,SAAS,CAACT,IAAI,CAACY;IAC9B,CAAC;IACD,OAAOF,GAAG;EACd;AACJ,CAAC;AAED,MAAMG,aAAa,GAAG,OAAOb,IAAI,EAAEC,KAAK,KAAK;EACzC;EACA;EACA;EACA;EACA;;EAEA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAACL,MAAM,GAAI,gDAA+C,EAAEE,IAAI,CAAC;EAClGc,OAAO,CAACC,GAAG,CAACb,QAAQ,CAAC;EACrB,OAAOA,QAAQ,CAACF,IAAI;AACxB,CAAC;AAED,MAAMgB,OAAO,GAAG,OAAOhB,IAAI,EAAEC,KAAK,KAAK;EACnC;EACA;EACA;EACA;EACA;;EAEA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACoB,GAAG,CAACnB,MAAM,GAAI,0BAAyBE,IAAK,GAAE,CAAC;EAE5E,OAAOE,QAAQ,CAACF,IAAI;AACxB,CAAC;AAED,MAAMkB,QAAQ,GAAG,MAAOjB,KAAK,IAAK;EAC9B;EACA;EACA;EACA;EACA;;EAEA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACoB,GAAG,CAACnB,MAAM,GAAI,yBAAwB,CAAC;EAEpE,OAAOI,QAAQ,CAACF,IAAI;AACxB,CAAC;AAED,MAAMmB,UAAU,GAAG,OAAOnB,IAAI,EAAEC,KAAK,KAAK;EACtC;EACA;EACA;EACA;EACA;;EAEA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACuB,KAAK,CAACtB,MAAM,GAAI,0BAAyBE,IAAI,CAACqB,EAAG,GAAE,EAAErB,IAAI,CAACsB,OAAO,CAAC;EAE/F,OAAOpB,QAAQ,CAACF,IAAI;AACxB,CAAC;AACD,MAAMuB,aAAa,GAAG;EAClBV,aAAa;EACbG,OAAO;EACPjB,aAAa;EACbK,SAAS;EACTe,UAAU;EACVD;AACJ,CAAC;AAED,eAAeK,aAAa"},"metadata":{},"sourceType":"module"}