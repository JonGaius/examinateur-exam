{"ast":null,"code":"var _jsxFileName = \"/Users/jonathangaiuskambire/Documents/sigepec/correction/examinateur/src/views/components/container/QuestionContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { toArray } from '../../../utils/sharedFunction';\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionContainer = _ref => {\n  _s();\n  let {\n    questIndex,\n    fncQuesion,\n    sujet,\n    socket,\n    examen,\n    fncTimeGrl,\n    langue\n  } = _ref;\n  const [time, setTime] = useState(0);\n  const [musicPath, setMusiPath] = useState(\"\");\n  const [secondLeft, setSecondLeft] = useState(0);\n  const secondLeftRef = useRef(secondLeft);\n  const green = \"#EF233C\";\n  const choiceAudio = useCallback(() => {\n    switch (langue) {\n      case \"français\":\n        setMusiPath(\"https://sigepec.hisiastudio.com/\" + sujet.questions[questIndex].audio_fr);\n        break;\n      case \"mooré\":\n        setMusiPath(\"https://sigepec.hisiastudio.com/\" + sujet.questions[questIndex].audio_moore);\n        break;\n      case \"dioula\":\n        setMusiPath(\"https://sigepec.hisiastudio.com/\" + sujet.questions[questIndex].audio_dioula);\n        break;\n      case \"fulfuldé\":\n        setMusiPath(\"https://sigepec.hisiastudio.com/\" + sujet.questions[questIndex].audio_fulfulde);\n        break;\n      default:\n        setMusiPath(\"\");\n        break;\n    }\n  }, [langue, sujet, questIndex]);\n  useEffect(() => {\n    choiceAudio();\n  }, [choiceAudio]);\n  const timerQuestion = useCallback(() => {\n    if (musicPath) {\n      const music = new Audio(musicPath);\n      music.onloadedmetadata = e => {\n        if (music.readyState > 0) {\n          // console.log(e)\n          var minutes = parseInt(music.duration / 60, 10);\n          var seconds = parseInt(music.duration % 60);\n          if (minutes > 0) {\n            setTime(minutes * 60);\n          } else {\n            setTime(seconds);\n          }\n        }\n      };\n    }\n  }, [musicPath]);\n  useEffect(() => {\n    timerQuestion();\n  }, [timerQuestion]);\n  useEffect(() => {\n    secondLeftRef.current = time + 30;\n    setSecondLeft(secondLeftRef.current);\n    const timer = setInterval(() => {\n      if (secondLeftRef.current === 0) {\n        //    navigate(\"/examens/fin\")\n        if (questIndex < sujet.questions.length - 1) {\n          fncQuesion(questIndex + 1);\n          let data = {\n            room: examen,\n            statut: true\n          };\n          socket.emit(\"finish_composition\", data);\n        }\n      }\n      if (secondLeftRef.current > 0) {\n        secondLeftRef.current = secondLeftRef.current - 1;\n        setSecondLeft(secondLeftRef.current);\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [fncQuesion, questIndex, time, sujet]);\n  useEffect(() => {\n    const music = new Audio(musicPath);\n    music.play();\n  }, [musicPath]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sigepec-examinateur-composition\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sigepec-examinateur-composition__image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://sigepec.hisiastudio.com/\" + sujet.questions[questIndex].image_question,\n        alt: \"question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sigepec-examinateur-composition__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sigepec-examinateur-composition__intitule sigepec-examinateur-composition-intitule\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sigepec-examinateur-composition-intitule__timer\",\n          children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n            value: secondLeft / (time + 30) * 100,\n            text: `${Math.floor(secondLeft / 60)} : ${secondLeft % 60 < 10 ? \"0\" + secondLeft % 60 : secondLeft % 60}`,\n            styles: buildStyles({\n              pathColor: green,\n              textColor: green,\n              textSize: 19\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Question \", questIndex + 1, \" sur \", sujet.questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: sujet.questions[questIndex].intitule_question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sigepec-examinateur-composition-intitule__responses\",\n          children: sujet.questions[questIndex].reponses.map((reponse, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sigepec-examinateur-composition-intitule__response\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: reponse.intitule_reponse\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sigepec-examinateur-composition-intitule__response--item\",\n              children: toArray(reponse.reponse_possible).map((resp, index) => /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: resp\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(QuestionContainer, \"QFENudA4TEHPfA72CbjlbADmhow=\");\n_c = QuestionContainer;\nexport default QuestionContainer;\nvar _c;\n$RefreshReg$(_c, \"QuestionContainer\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","toArray","CircularProgressbar","buildStyles","QuestionContainer","questIndex","fncQuesion","sujet","socket","examen","fncTimeGrl","langue","time","setTime","musicPath","setMusiPath","secondLeft","setSecondLeft","secondLeftRef","green","choiceAudio","questions","audio_fr","audio_moore","audio_dioula","audio_fulfulde","timerQuestion","music","Audio","onloadedmetadata","e","readyState","minutes","parseInt","duration","seconds","current","timer","setInterval","length","data","room","statut","emit","clearInterval","play","image_question","Math","floor","pathColor","textColor","textSize","intitule_question","reponses","map","reponse","index","intitule_reponse","reponse_possible","resp"],"sources":["/Users/jonathangaiuskambire/Documents/sigepec/correction/examinateur/src/views/components/container/QuestionContainer.js"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { toArray } from '../../../utils/sharedFunction';\nimport {CircularProgressbar, buildStyles} from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\"\n\nconst QuestionContainer = ({questIndex, fncQuesion, sujet, socket,examen, fncTimeGrl, langue}) => {\n\n    const [time, setTime] = useState(0)\n    const [musicPath, setMusiPath] = useState(\"\")\n    const [secondLeft, setSecondLeft] = useState(0)\n    const secondLeftRef = useRef(secondLeft)\n    const green = \"#EF233C\"\n\n    const choiceAudio = useCallback(\n        () => {\n            switch (langue) {\n                case \"français\":\n                    setMusiPath(\"https://sigepec.hisiastudio.com/\"+sujet.questions[questIndex].audio_fr)\n                    break;\n\n                case \"mooré\":\n                    setMusiPath(\"https://sigepec.hisiastudio.com/\"+sujet.questions[questIndex].audio_moore)\n                    break;\n\n                case \"dioula\":\n                    setMusiPath(\"https://sigepec.hisiastudio.com/\"+sujet.questions[questIndex].audio_dioula)\n                    break;\n        \n                case \"fulfuldé\":\n                    setMusiPath(\"https://sigepec.hisiastudio.com/\"+sujet.questions[questIndex].audio_fulfulde)\n                    break;\n                        \n                default:\n                    setMusiPath(\"\")\n                    break;\n            }\n\n        },[langue, sujet, questIndex]\n    )\n\n    useEffect(() => {\n        choiceAudio()\n    },[choiceAudio])\n\n    const timerQuestion = useCallback(\n        () => {\n            if(musicPath){\n                const music = new Audio(musicPath);\n                music.onloadedmetadata = (e) => {\n                    if (music.readyState > 0) {\n                        // console.log(e)\n                        var minutes = parseInt(music.duration / 60, 10);\n                        var seconds = parseInt(music.duration % 60);\n            \n                        if(minutes > 0){\n                            setTime(minutes * 60)\n                        }else{\n                            setTime(seconds)\n                        }\n                    }\n                }\n            }\n        }, [musicPath]\n    )\n\n\n    \n    useEffect(() => {\n        timerQuestion()\n    }, [timerQuestion])\n\n    useEffect(() => {\n        secondLeftRef.current = time + 30\n        setSecondLeft(secondLeftRef.current)\n\n        const timer = setInterval(() => {\n            if(secondLeftRef.current === 0){\n            //    navigate(\"/examens/fin\")\n                if(questIndex < sujet.questions.length - 1){\n                    fncQuesion(questIndex + 1)\n\n                let data = {\n                    room: examen,\n                    statut: true,\n                }\n                socket.emit(\"finish_composition\", data)\n                }\n            }\n            if(secondLeftRef.current > 0){\n                secondLeftRef.current = secondLeftRef.current - 1;\n                setSecondLeft(secondLeftRef.current)\n            }\n        }, 1000)\n        return () => clearInterval(timer)\n\n    },[fncQuesion, questIndex, time, sujet])\n\n    useEffect(() => {\n        const music = new Audio(musicPath);\n        music.play();\n    },[musicPath])\n\n    return (\n        <div className='sigepec-examinateur-composition'>\n            <div className='sigepec-examinateur-composition__image'>\n                <img src={\"https://sigepec.hisiastudio.com/\" + sujet.questions[questIndex].image_question} alt=\"question\" />\n            </div>\n            <div className='sigepec-examinateur-composition__container'>\n                <div className='sigepec-examinateur-composition__intitule sigepec-examinateur-composition-intitule'>\n                    <div className='sigepec-examinateur-composition-intitule__timer'>\n                       \n                        <CircularProgressbar value={secondLeft / (time + 30) * 100} text={`${Math.floor(secondLeft / 60)} : ${(secondLeft % 60) < 10 ? \"0\"+secondLeft % 60 : secondLeft % 60}`} styles={buildStyles({\n                            pathColor: green,\n                            textColor: green,\n                            textSize: 19\n                        })} />\n\n                        {/* {console.log(secondLeft / (time + 30))} */}\n                        <strong>Question {questIndex + 1} sur {sujet.questions.length}</strong>\n                    </div>\n                    <h2>{sujet.questions[questIndex].intitule_question}</h2>\n                    <div className='sigepec-examinateur-composition-intitule__responses'>\n                        {\n                            sujet.questions[questIndex].reponses.map((reponse, index) => (\n                                <div className='sigepec-examinateur-composition-intitule__response' key={index}>\n                                    <p>{reponse.intitule_reponse}</p>\n                                    <div className='sigepec-examinateur-composition-intitule__response--item'>\n                                        {\n                                            toArray(reponse.reponse_possible).map((resp, index) => (\n                                                <strong key={index}>{resp}</strong>\n                                            ))\n                                        }\n                                    </div>\n                                </div>\n                            ))\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default QuestionContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}